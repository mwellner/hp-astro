---
import BlogPost from "@components/BlogPost.astro";
import PageLayout from "@layouts/PageLayout.astro";
import { getCollection } from "astro:content";
import { localizePath } from "astro-i18next";

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection(
    "blog",
    ({ data }) => data.language === "de"
  );
  allPosts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
  return paginate(allPosts, { pageSize: 12 });
}
const { page } = Astro.props;
const pageTitle = "Blog";
---

<PageLayout pageTitle={pageTitle}>
  <div class="grid mt-4 mb-4">
    {
      page.data.map((post) => (
        <BlogPost
          url={localizePath(post.slug)}
          title={post.data.title}
          description={post.data.description}
          date={post.data.pubDate}
          imageSrc={post.data.image?.src}
          imageAlt={post.data.image?.alt}
        />
      ))
    }
  </div>

  <nav aria-label="Seitennavigation">
    <ul class="pagination">
      {
        page.url.prev ? (
          <li class="page-item">
            <a class="page-link" href={page.url.prev}>
              Zur√ºck
            </a>
          </li>
        ) : null
      }
      {
        page.currentPage > 1 ? (
          <li class="page-item">
            <a class="page-link" href={page.url.prev}>
              {page.currentPage - 1}
            </a>
          </li>
        ) : null
      }
      <li class="page-item active">
        <a class="page-link" href={page.url.current}>{page.currentPage}</a>
      </li>
      {
        page.currentPage !== page.lastPage ? (
          <li class="page-item">
            <a class="page-link" href={page.url.next}>
              {page.currentPage + 1}
            </a>
          </li>
        ) : null
      }
      {
        page.url.next ? (
          <li class="page-item">
            <a class="page-link" href={page.url.next}>
              Vor
            </a>
          </li>
        ) : null
      }
    </ul>
  </nav>
</PageLayout>
